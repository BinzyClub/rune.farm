{"version":3,"sources":["views/Farms/components/types.ts","utils/getLiquidityUrlPathParts.ts","views/Farms/components/FarmCard/DetailsSection.tsx","views/Farms/components/FarmCard/CardHeading.tsx","components/ModalInput/ModalInput.tsx","views/Farms/components/DepositModal.tsx","views/Farms/components/WithdrawModal.tsx","views/Farms/components/FarmCard/StakeAction.tsx","views/Farms/components/FarmCard/HarvestAction.tsx","views/Farms/components/FarmCard/CardActionsContainer.tsx","utils/compoundApyHelpers.ts","views/Farms/components/FarmCard/ApyCalculatorModal.tsx","views/Farms/components/FarmCard/ApyButton.tsx","views/Farms/components/FarmCard/FarmCard.tsx","views/Farms/components/FarmTable/Apr.tsx","views/Farms/components/FarmTable/Farm.tsx","views/Farms/components/FarmTable/Earned.tsx","views/Farms/components/FarmTable/Details.tsx","views/Farms/components/Tooltip/Tooltip.tsx","views/Farms/components/FarmTable/Multiplier.tsx","views/Farms/components/FarmTable/Liquidity.tsx","views/Farms/components/FarmTable/Actions/styles.ts","views/Farms/components/FarmTable/Actions/HarvestAction.tsx","views/Farms/components/FarmTable/Actions/StakedAction.tsx","views/Farms/components/FarmTable/Actions/ActionPanel.tsx","views/Farms/components/FarmTable/CellLayout.tsx","views/Farms/components/FarmTable/Row.tsx","views/Farms/components/FarmTable/FarmTable.tsx","views/Farms/components/FarmTabButtons/index.tsx","views/Farms/components/SearchInput.tsx","views/Farms/components/ToggleView/ToggleView.tsx","views/Farms/components/Select/Select.tsx","views/Farms/Farms.tsx","components/ExpandableSectionButton/ExpandableSectionButton.tsx"],"names":["ViewMode","getLiquidityUrlPathParts","quoteTokenAdresses","quoteTokenSymbol","tokenAddresses","firstPart","process","secondPart","Wrapper","styled","div","StyledLinkExternal","LinkExternal","theme","colors","text","primary","DetailsSection","bscScanAddress","removed","totalValueFormated","lpLabel","addLiquidityUrl","TranslateString","useI18n","justifyContent","href","external","bold","Flex","MultiplierTag","Tag","CardHeading","multiplier","isCommunityFarm","farmImage","tokenSymbol","alignItems","mb","src","alt","width","height","flexDirection","variant","StyledTokenInput","input","isWarning","shadows","warning","inset","StyledInput","Input","mediaQueries","xs","sm","StyledErrorMessage","Text","ModalInput","max","symbol","onChange","onSelectMax","value","inputTitle","isBalanceZero","displayBalance","parseFloat","toFixed","style","position","pl","fontSize","toLocaleString","placeholder","scale","onClick","mr","color","DepositModal","onConfirm","onDismiss","tokenName","useState","val","setVal","pendingTx","setPendingTx","fullBalance","useMemo","getFullDisplayBalance","handleChange","useCallback","e","currentTarget","handleSelectMax","title","ModalActions","disabled","a","alignSelf","WithdrawModal","IconButtonWrapper","StakeAction","stakedBalance","tokenBalance","pid","onStake","useStake","onUnstake","useUnstake","rawStakedBalance","getBalanceNumber","useModal","onPresentDeposit","onPresentWithdraw","HarvestAction","earnings","onReward","useHarvest","rawEarningsBalance","Action","CardActions","farm","account","requestedApproval","setRequestedApproval","useFarmFromSymbol","lpSymbol","lpAddresses","useFarmUser","allowance","lpAddress","getAddress","lpName","toUpperCase","isApproved","isGreaterThan","web3","useWeb3","lpContract","getBep20Contract","onApprove","useApprove","handleApprove","console","error","textTransform","pr","mt","UnlockButton","calculateCakeEarnedPerThousandDollars","number","numberOfDays","apyAsDecimal","farmApy","daysAsDecimalOfYear","principal","cakePrice","finalAmount","Math","round","apyModalRoi","amountEarned","amountInvested","Grid","GridItem","Description","ApyCalculatorModal","apy","times","BigNumber","toNumber","oneThousandDollarsWorthOfCake","cakeEarnedPerThousand1D","cakeEarnedPerThousand7D","cakeEarnedPerThousand30D","cakeEarnedPerThousand365D","ApyButton","onPresentApyModal","event","stopPropagation","ml","RainbowLight","keyframes","StyledCardAccent","FCard","props","card","background","Divider","borderColor","ExpandingWrapper","expanded","FarmCard","bnbPrice","ethPrice","showExpandableSection","setShowExpandableSection","communityFarms","includes","split","toLocaleLowerCase","totalValue","lpTotalInQuoteToken","QuoteToken","BNB","CAKE","ETH","Number","undefined","maximumFractionDigits","replace","earnLabel","dual","farmAPY","slice","liquidityUrlPathParts","BASE_ADD_LIQUIDITY_URL","display","CardActionsContainer","ExpandableSectionButton","Container","textSubtle","AprWrapper","Apr","originalValue","hideButton","displayApr","Label","span","IconImage","img","Farm","image","label","Amount","earned","textDisabled","Earned","ArrowIcon","ChevronDownIcon","toggled","Details","actionPanelToggled","isMobile","useMatchBreakpoints","isXl","TooltipContent","tooltip","zIndices","modal","Tooltip","content","children","MultiplierWrapper","Multiplier","displayMultipler","toLowerCase","LiquidityWrapper","Liquidity","liquidity","displayLiquidity","ActionContainer","xl","ActionTitles","Title","secondary","Subtle","ActionContent","Staked","userData","earningsBigNumber","usePriceCakeBusd","earningsBusd","multipliedBy","useWeb3React","useCountUp","start","end","duration","separator","decimals","countUp","update","updateValue","useRef","useEffect","current","StyledLink","Link","StakeContainer","TagsContainer","InfoContainer","ValueContainer","ValueWrapper","ActionPanel","details","apr","bsc","info","StakedAction","ContentContainer","CellLayout","MobileColumnSchema","id","normal","name","translationId","sortable","DesktopColumnSchema","cells","CellInner","StyledTr","tr","EarnedMobileCell","td","AprMobileCell","FarmMobileCell","Row","setActionPanelToggled","toggleActionPanel","cellLabel","key","isXs","columnNames","map","column","Object","keys","indexOf","React","createElement","colSpan","dropShadow","TableWrapper","StyledTable","table","TableBody","tbody","TableContainer","ScrollButtonContainer","forwardRef","tableWrapperEl","data","columns","rows","useTable","sortColumn","ref","row","original","scrollIntoView","behavior","FarmTabButtons","useRouteMatch","url","isExact","activeIndex","as","to","InputWrapper","SearchInput","setToggled","inputEl","onBlur","ToggleView","viewMode","onToggle","handleToggle","mode","CARD","TABLE","DropDownHeader","inputSecondary","DropDownListContainer","dropdown","DropDownContainer","isOpen","css","boxShadow","DropDownList","ul","ListItem","li","Select","options","containerRef","dropdownRef","setIsOpen","selectedOption","setSelectedOption","containerSize","setContainerSize","toggling","onOptionClicked","option","offsetWidth","offsetHeight","ControlContainer","ToggleWrapper","LabelWrapper","FilterContainer","ViewControls","StyledImage","Image","Header","gradients","bubblegum","Farms","path","pathname","useLocation","farmsLP","useFarms","usePriceBnbBusd","query","setQuery","setViewMode","ethPriceUsd","usePriceEthBusd","sortOption","setSortOption","dispatch","useDispatch","fastRefresh","useRefresh","fetchFarmUserDataAsync","stackedOnly","setStackedOnly","activeFarms","filter","inactiveFarms","tableRef","stackedOnlyFarms","farmsList","farmsToDisplay","cakePriceVsBNB","find","CAKE_POOL_PID","tokenPriceVsQuote","farmsToDisplayWithAPY","tokenAmount","cakeRewardPerBlock","CAKE_PER_BLOCK","poolWeight","cakeRewardPerYear","BLOCKS_PER_YEAR","BUSD","UST","cakeApy","dualApy","rewardPerBlock","plus","lowercaseQuery","isActive","farmsStaked","rowData","farms","orderBy","sortFarms","size","Page","checked","marginLeft","target","length","sort","b","exact","renderContent","aria-label","role","defaultProps"],"mappings":"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","file":"static/js/12.5ae37b85.chunk.js","sourcesContent":["export type TableProps = {\n  data?: TableDataTypes[]\n  selectedFilters?: string\n  sortBy?: string\n  sortDir?: string\n  onSort?: (value: string) => void\n}\n\nexport type ColumnsDefTypes = {\n  id: number\n  bold: string\n  normal: string\n  name: string\n  translationId: number\n  sortable: boolean\n}\n\nexport type ScrollBarProps = {\n  ref: string\n  width: number\n}\n\nexport type TableDataTypes = {\n  POOL: string\n  APY: string\n  EARNED: string\n  STAKED: string\n  DETAILS: string\n  LINKS: string\n}\n\nexport const MobileColumnSchema = [\n  {\n    id: 1,\n    bold: '',\n    normal: 'Farm',\n    name: 'farm',\n    translationId: 999,\n    sortable: true,\n  },\n  {\n    id: 2,\n    bold: 'CAKE',\n    normal: 'EARNED',\n    name: 'earned',\n    translationId: 999,\n    sortable: true,\n  },\n  {\n    id: 3,\n    bold: '',\n    normal: 'APR',\n    name: 'apr',\n    translationId: 999,\n    sortable: true,\n  },\n  {\n    id: 6,\n    bold: '',\n    normal: 'DETAILS',\n    name: 'details',\n    translationId: 999,\n    sortable: true,\n  },\n]\n\nexport const DesktopColumnSchema: ColumnsDefTypes[] = [\n  {\n    id: 1,\n    bold: '',\n    normal: 'Farm',\n    name: 'farm',\n    translationId: 999,\n    sortable: true,\n  },\n  {\n    id: 2,\n    bold: 'CAKE',\n    normal: 'EARNED',\n    name: 'earned',\n    translationId: 999,\n    sortable: true,\n  },\n  {\n    id: 3,\n    bold: '',\n    normal: 'APR',\n    name: 'apr',\n    translationId: 999,\n    sortable: true,\n  },\n  {\n    id: 4,\n    bold: '',\n    normal: 'STAKED',\n    name: 'liquidity',\n    translationId: 999,\n    sortable: true,\n  },\n  {\n    id: 5,\n    bold: '',\n    normal: 'MULTIPLIER',\n    name: 'multiplier',\n    translationId: 999,\n    sortable: true,\n  },\n  {\n    id: 6,\n    bold: '',\n    normal: 'DETAILS',\n    name: 'details',\n    translationId: 999,\n    sortable: true,\n  },\n]\n\nexport enum ViewMode {\n  'TABLE' = 'TABLE',\n  'CARD' = 'CARD',\n}\n","// Constructing the two forward-slash-separated parts of the 'Add Liquidity' URL\n// Each part of the url represents a different side of the LP pair.\n// In the URL, using the quote token 'BNB' is represented by 'ETH'\nconst getLiquidityUrlPathParts = ({ quoteTokenAdresses, quoteTokenSymbol, tokenAddresses }) => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  const firstPart = quoteTokenSymbol === 'BNB' ? 'ETH' : quoteTokenAdresses[chainId]\n  const secondPart = tokenAddresses[chainId]\n  return `${firstPart}/${secondPart}`\n}\n\nexport default getLiquidityUrlPathParts\n","import React from 'react'\nimport useI18n from 'hooks/useI18n'\nimport styled from 'styled-components'\nimport { Text, Flex, Link, LinkExternal } from '@pancakeswap-libs/uikit'\n\nexport interface ExpandableSectionProps {\n  bscScanAddress?: string\n  removed?: boolean\n  totalValueFormated?: string\n  lpLabel?: string\n  addLiquidityUrl?: string\n}\n\nconst Wrapper = styled.div`\n  margin-top: 24px;\n`\n\nconst StyledLinkExternal = styled(LinkExternal)`\n  text-decoration: none;\n  font-weight: normal;\n  color: ${({ theme }) => theme.colors.text};\n  display: flex;\n  align-items: center;\n\n  svg {\n    padding-left: 4px;\n    height: 18px;\n    width: auto;\n    fill: ${({ theme }) => theme.colors.primary};\n  }\n`\n\nconst DetailsSection: React.FC<ExpandableSectionProps> = ({\n  bscScanAddress,\n  removed,\n  totalValueFormated,\n  lpLabel,\n  addLiquidityUrl,\n}) => {\n  const TranslateString = useI18n()\n\n  return (\n    <Wrapper>\n      <Flex justifyContent=\"space-between\">\n        <Text>{TranslateString(316, 'Stake')}:</Text>\n        <StyledLinkExternal href={addLiquidityUrl}>{lpLabel}</StyledLinkExternal>\n      </Flex>\n      {!removed && (\n        <Flex justifyContent=\"space-between\">\n          <Text>{TranslateString(23, 'Total Liquidity')}:</Text>\n          <Text>{totalValueFormated}</Text>\n        </Flex>\n      )}\n      <Flex justifyContent=\"flex-start\">\n        <Link external href={bscScanAddress} bold={false}>\n          {TranslateString(356, 'View on BscScan')}\n        </Link>\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default DetailsSection\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Tag, Flex, Heading, Image } from '@pancakeswap-libs/uikit'\nimport { CommunityTag, CoreTag } from 'components/Tags'\n\nexport interface ExpandableSectionProps {\n  lpLabel?: string\n  multiplier?: string\n  isCommunityFarm?: boolean\n  farmImage?: string\n  tokenSymbol?: string\n}\n\nconst Wrapper = styled(Flex)`\n  svg {\n    margin-right: 4px;\n  }\n`\n\nconst MultiplierTag = styled(Tag)`\n  margin-left: 4px;\n`\n\nconst CardHeading: React.FC<ExpandableSectionProps> = ({\n  lpLabel,\n  multiplier,\n  isCommunityFarm,\n  farmImage,\n  tokenSymbol,\n}) => {\n  return (\n    <Wrapper justifyContent=\"space-between\" alignItems=\"center\" mb=\"12px\">\n      <Image src={`/images/farms/${farmImage}.svg`} alt={tokenSymbol} width={64} height={64} />\n      <Flex flexDirection=\"column\" alignItems=\"flex-end\">\n        <Heading mb=\"4px\">{lpLabel}</Heading>\n        <Flex justifyContent=\"center\">\n          {isCommunityFarm ? <CommunityTag /> : <CoreTag />}\n          <MultiplierTag variant=\"secondary\">{multiplier}</MultiplierTag>\n        </Flex>\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default CardHeading\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Button, Input, InputProps, Flex, Link } from '@pancakeswap-libs/uikit'\nimport useI18n from '../../hooks/useI18n'\n\ninterface ModalInputProps {\n  max: string\n  symbol: string\n  onSelectMax?: () => void\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\n  placeholder?: string\n  value: string\n  addLiquidityUrl?: string\n  inputTitle?: string\n}\n\nconst getBoxShadow = ({ isWarning = false, theme }) => {\n  if (isWarning) {\n    return theme.shadows.warning\n  }\n\n  return theme.shadows.inset\n}\n\nconst StyledTokenInput = styled.div<InputProps>`\n  display: flex;\n  flex-direction: column;\n  background-color: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  box-shadow: ${getBoxShadow};\n  color: ${({ theme }) => theme.colors.text};\n  padding: 8px 16px 8px 0;\n  width: 100%;\n`\n\nconst StyledInput = styled(Input)`\n  box-shadow: none;\n  width: 60px;\n  margin: 0 8px;\n  padding: 0 8px;\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    width: 80px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n  }\n`\n\nconst StyledErrorMessage = styled(Text)`\n  position: absolute;\n  bottom: -22px;\n  a {\n    display: inline;\n  }\n`\n\nconst ModalInput: React.FC<ModalInputProps> = ({\n  max,\n  symbol,\n  onChange,\n  onSelectMax,\n  value,\n  addLiquidityUrl,\n  inputTitle,\n}) => {\n  const TranslateString = useI18n()\n  const isBalanceZero = max === '0' || !max\n\n  const displayBalance = isBalanceZero ? '0' : parseFloat(max).toFixed(4)\n\n  return (\n    <div style={{ position: 'relative' }}>\n      <StyledTokenInput isWarning={isBalanceZero}>\n        <Flex justifyContent=\"space-between\" pl=\"16px\">\n          <Text fontSize=\"14px\">{inputTitle}</Text>\n          <Text fontSize=\"14px\">\n            {TranslateString(1120, 'Balance')}: {displayBalance.toLocaleString()}\n          </Text>\n        </Flex>\n        <Flex alignItems=\"flex-end\" justifyContent=\"space-around\">\n          <StyledInput onChange={onChange} placeholder=\"0\" value={value} />\n          <Button scale=\"sm\" onClick={onSelectMax} mr=\"8px\">\n            {TranslateString(452, 'Max')}\n          </Button>\n          <Text fontSize=\"16px\">{symbol}</Text>\n        </Flex>\n      </StyledTokenInput>\n      {isBalanceZero && (\n        <StyledErrorMessage fontSize=\"14px\" color=\"failure\">\n          No tokens to stake:{' '}\n          <Link fontSize=\"14px\" bold={false} href={addLiquidityUrl} external color=\"failure\">\n            {TranslateString(999, 'get')} {symbol}\n          </Link>\n        </StyledErrorMessage>\n      )}\n    </div>\n  )\n}\n\nexport default ModalInput\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal, LinkExternal } from '@pancakeswap-libs/uikit'\nimport ModalActions from 'components/ModalActions'\nimport ModalInput from 'components/ModalInput'\nimport useI18n from 'hooks/useI18n'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface DepositModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n  addLiquidityUrl?: string\n}\n\nconst DepositModal: React.FC<DepositModalProps> = ({ max, onConfirm, onDismiss, tokenName = '', addLiquidityUrl }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={TranslateString(1068, 'Stake LP tokens')} onDismiss={onDismiss}>\n      <ModalInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n        addLiquidityUrl={addLiquidityUrl}\n        inputTitle={TranslateString(1070, 'Stake')}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\">\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          width=\"100%\"\n          disabled={pendingTx || fullBalance === '0' || val === '0'}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n      <LinkExternal href={addLiquidityUrl} style={{ alignSelf: 'center' }}>\n        {TranslateString(999, 'Get')} {tokenName}\n      </LinkExternal>\n    </Modal>\n  )\n}\n\nexport default DepositModal\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\nimport ModalActions from 'components/ModalActions'\nimport ModalInput from 'components/ModalInput'\nimport useI18n from 'hooks/useI18n'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface WithdrawModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={TranslateString(1126, 'Unstake LP tokens')} onDismiss={onDismiss}>\n      <ModalInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={fullBalance}\n        symbol={tokenName}\n        inputTitle={TranslateString(588, 'Unstake')}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\">\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n          width=\"100%\"\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default WithdrawModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, Flex, Heading, IconButton, AddIcon, MinusIcon, useModal } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useStake from 'hooks/useStake'\nimport useUnstake from 'hooks/useUnstake'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport DepositModal from '../DepositModal'\nimport WithdrawModal from '../WithdrawModal'\n\ninterface FarmCardActionsProps {\n  stakedBalance?: BigNumber\n  tokenBalance?: BigNumber\n  tokenName?: string\n  pid?: number\n  addLiquidityUrl?: string\n}\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n  svg {\n    width: 20px;\n  }\n`\n\nconst StakeAction: React.FC<FarmCardActionsProps> = ({\n  stakedBalance,\n  tokenBalance,\n  tokenName,\n  pid,\n  addLiquidityUrl,\n}) => {\n  const TranslateString = useI18n()\n  const { onStake } = useStake(pid)\n  const { onUnstake } = useUnstake(pid)\n\n  const rawStakedBalance = getBalanceNumber(stakedBalance)\n  const displayBalance = rawStakedBalance.toLocaleString()\n\n  const [onPresentDeposit] = useModal(\n    <DepositModal max={tokenBalance} onConfirm={onStake} tokenName={tokenName} addLiquidityUrl={addLiquidityUrl} />,\n  )\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal max={stakedBalance} onConfirm={onUnstake} tokenName={tokenName} />,\n  )\n\n  const renderStakingButtons = () => {\n    return rawStakedBalance === 0 ? (\n      <Button onClick={onPresentDeposit}>{TranslateString(999, 'Stake LP')}</Button>\n    ) : (\n      <IconButtonWrapper>\n        <IconButton variant=\"tertiary\" onClick={onPresentWithdraw} mr=\"6px\">\n          <MinusIcon color=\"primary\" />\n        </IconButton>\n        <IconButton variant=\"tertiary\" onClick={onPresentDeposit}>\n          <AddIcon color=\"primary\" />\n        </IconButton>\n      </IconButtonWrapper>\n    )\n  }\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\n      <Heading color={rawStakedBalance === 0 ? 'textDisabled' : 'text'}>{displayBalance}</Heading>\n      {renderStakingButtons()}\n    </Flex>\n  )\n}\n\nexport default StakeAction\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { Button, Flex, Heading } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { useHarvest } from 'hooks/useHarvest'\nimport { getBalanceNumber } from 'utils/formatBalance'\n\ninterface FarmCardActionsProps {\n  earnings?: BigNumber\n  pid?: number\n}\n\nconst HarvestAction: React.FC<FarmCardActionsProps> = ({ earnings, pid }) => {\n  const TranslateString = useI18n()\n  const [pendingTx, setPendingTx] = useState(false)\n  const { onReward } = useHarvest(pid)\n\n  const rawEarningsBalance = getBalanceNumber(earnings)\n  const displayBalance = rawEarningsBalance.toLocaleString()\n\n  return (\n    <Flex mb=\"8px\" justifyContent=\"space-between\" alignItems=\"center\">\n      <Heading color={rawEarningsBalance === 0 ? 'textDisabled' : 'text'}>{displayBalance}</Heading>\n      <Button\n        disabled={rawEarningsBalance === 0 || pendingTx}\n        onClick={async () => {\n          setPendingTx(true)\n          await onReward()\n          setPendingTx(false)\n        }}\n      >\n        {TranslateString(562, 'Harvest')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default HarvestAction\n","import React, { useState, useCallback } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { provider as ProviderType } from 'web3-core'\nimport { getAddress } from 'utils/addressHelpers'\nimport { getBep20Contract } from 'utils/contractHelpers'\nimport { Button, Flex, Text } from '@pancakeswap-libs/uikit'\nimport { Farm } from 'state/types'\nimport { useFarmFromSymbol, useFarmUser } from 'state/hooks'\nimport useI18n from 'hooks/useI18n'\nimport useWeb3 from 'hooks/useWeb3'\nimport { useApprove } from 'hooks/useApprove'\nimport UnlockButton from 'components/UnlockButton'\nimport StakeAction from './StakeAction'\nimport HarvestAction from './HarvestAction'\n\nconst Action = styled.div`\n  padding-top: 16px;\n`\nexport interface FarmWithStakedValue extends Farm {\n  apy?: BigNumber\n}\n\ninterface FarmCardActionsProps {\n  farm: FarmWithStakedValue\n  provider?: ProviderType\n  account?: string\n  addLiquidityUrl?: string\n}\n\nconst CardActions: React.FC<FarmCardActionsProps> = ({ farm, account, addLiquidityUrl }) => {\n  const TranslateString = useI18n()\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { pid, lpAddresses } = useFarmFromSymbol(farm.lpSymbol)\n  const { allowance, tokenBalance, stakedBalance, earnings } = useFarmUser(pid)\n  const lpAddress = getAddress(lpAddresses)\n  const lpName = farm.lpSymbol.toUpperCase()\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\n  const web3 = useWeb3()\n\n  const lpContract = getBep20Contract(lpAddress, web3)\n\n  const { onApprove } = useApprove(lpContract)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      await onApprove()\n      setRequestedApproval(false)\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove])\n\n  const renderApprovalOrStakeButton = () => {\n    return isApproved ? (\n      <StakeAction\n        stakedBalance={stakedBalance}\n        tokenBalance={tokenBalance}\n        tokenName={lpName}\n        pid={pid}\n        addLiquidityUrl={addLiquidityUrl}\n      />\n    ) : (\n      <Button mt=\"8px\" width=\"100%\" disabled={requestedApproval} onClick={handleApprove}>\n        {TranslateString(758, 'Approve Contract')}\n      </Button>\n    )\n  }\n\n  return (\n    <Action>\n      <Flex>\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"3px\">\n          {/* TODO: Is there a way to get a dynamic value here from useFarmFromSymbol? */}\n          CAKE\n        </Text>\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n          {TranslateString(1072, 'Earned')}\n        </Text>\n      </Flex>\n      <HarvestAction earnings={earnings} pid={pid} />\n      <Flex>\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"3px\">\n          {lpName}\n        </Text>\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n          {TranslateString(1074, 'Staked')}\n        </Text>\n      </Flex>\n      {!account ? <UnlockButton mt=\"8px\" width=\"100%\" /> : renderApprovalOrStakeButton()}\n    </Action>\n  )\n}\n\nexport default CardActions\n","const roundToTwoDp = (number) => Math.round(number * 100) / 100\n\nexport const calculateCakeEarnedPerThousandDollars = ({ numberOfDays, farmApy, cakePrice }) => {\n  // Everything here is worked out relative to a year, with the asset compounding daily\n  const timesCompounded = 365\n  //   We use decimal values rather than % in the math for both APY and the number of days being calculates as a proportion of the year\n  const apyAsDecimal = farmApy / 100\n  const daysAsDecimalOfYear = numberOfDays / timesCompounded\n  //   Calculate the starting CAKE balance with a dollar balance of $1000.\n  const principal = 1000 / cakePrice\n\n  // This is a translation of the typical mathematical compounding APY formula. Details here: https://www.calculatorsoup.com/calculators/financial/compound-interest-calculator.php\n  const finalAmount = principal * (1 + apyAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear)\n\n  // To get the cake earned, deduct the amount after compounding (finalAmount) from the starting CAKE balance (principal)\n  const interestEarned = finalAmount - principal\n  return roundToTwoDp(interestEarned)\n}\n\nexport const apyModalRoi = ({ amountEarned, amountInvested }) => {\n  const percentage = (amountEarned / amountInvested) * 100\n  return percentage.toFixed(2)\n}\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { Modal, Text, LinkExternal, Flex } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { calculateCakeEarnedPerThousandDollars, apyModalRoi } from 'utils/compoundApyHelpers'\n\ninterface ApyCalculatorModalProps {\n  onDismiss?: () => void\n  lpLabel?: string\n  cakePrice?: BigNumber\n  apy?: BigNumber\n  addLiquidityUrl?: string\n}\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-template-rows: repeat(4, auto);\n  margin-bottom: 24px;\n`\n\nconst GridItem = styled.div`\n  margin-bottom: '10px';\n`\n\nconst Description = styled(Text)`\n  max-width: 320px;\n  margin-bottom: 28px;\n`\n\nconst ApyCalculatorModal: React.FC<ApyCalculatorModalProps> = ({\n  onDismiss,\n  lpLabel,\n  cakePrice,\n  apy,\n  addLiquidityUrl,\n}) => {\n  const TranslateString = useI18n()\n  const farmApy = apy.times(new BigNumber(100)).toNumber()\n  const oneThousandDollarsWorthOfCake = 1000 / cakePrice.toNumber()\n\n  const cakeEarnedPerThousand1D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 1, farmApy, cakePrice })\n  const cakeEarnedPerThousand7D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 7, farmApy, cakePrice })\n  const cakeEarnedPerThousand30D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 30, farmApy, cakePrice })\n  const cakeEarnedPerThousand365D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 365, farmApy, cakePrice })\n\n  return (\n    <Modal title=\"ROI\" onDismiss={onDismiss}>\n      <Grid>\n        <GridItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"20px\">\n            {TranslateString(860, 'Timeframe')}\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"20px\">\n            {TranslateString(858, 'ROI')}\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"20px\">\n            {TranslateString(864, 'CAKE per $1000')}\n          </Text>\n        </GridItem>\n        {/* 1 day row */}\n        <GridItem>\n          <Text>1d</Text>\n        </GridItem>\n        <GridItem>\n          <Text>\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand1D, amountInvested: oneThousandDollarsWorthOfCake })}%\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{cakeEarnedPerThousand1D}</Text>\n        </GridItem>\n        {/* 7 day row */}\n        <GridItem>\n          <Text>7d</Text>\n        </GridItem>\n        <GridItem>\n          <Text>\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand7D, amountInvested: oneThousandDollarsWorthOfCake })}%\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{cakeEarnedPerThousand7D}</Text>\n        </GridItem>\n        {/* 30 day row */}\n        <GridItem>\n          <Text>30d</Text>\n        </GridItem>\n        <GridItem>\n          <Text>\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand30D, amountInvested: oneThousandDollarsWorthOfCake })}%\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{cakeEarnedPerThousand30D}</Text>\n        </GridItem>\n        {/* 365 day / APY row */}\n        <GridItem>\n          <Text>365d(APY)</Text>\n        </GridItem>\n        <GridItem>\n          <Text>\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand365D, amountInvested: oneThousandDollarsWorthOfCake })}%\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{cakeEarnedPerThousand365D}</Text>\n        </GridItem>\n      </Grid>\n      <Description fontSize=\"12px\" color=\"textSubtle\">\n        {TranslateString(\n          866,\n          'Calculated based on current rates. Compounding once daily. Rates are estimates provided for your convenience only, and by no means represent guaranteed returns.',\n        )}\n      </Description>\n      <Flex justifyContent=\"center\">\n        <LinkExternal href={addLiquidityUrl}>\n          {TranslateString(999, 'Get')} {lpLabel}\n        </LinkExternal>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default ApyCalculatorModal\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport { IconButton, useModal, CalculateIcon } from '@pancakeswap-libs/uikit'\nimport ApyCalculatorModal from './ApyCalculatorModal'\n\nexport interface ApyButtonProps {\n  lpLabel?: string\n  cakePrice?: BigNumber\n  apy?: BigNumber\n  addLiquidityUrl?: string\n}\n\nconst ApyButton: React.FC<ApyButtonProps> = ({ lpLabel, cakePrice, apy, addLiquidityUrl }) => {\n  const [onPresentApyModal] = useModal(\n    <ApyCalculatorModal lpLabel={lpLabel} cakePrice={cakePrice} apy={apy} addLiquidityUrl={addLiquidityUrl} />,\n  )\n\n  const handleClickButton = (event): void => {\n    event.stopPropagation()\n    onPresentApyModal()\n  }\n\n  return (\n    <IconButton onClick={handleClickButton} variant=\"text\" scale=\"sm\" ml=\"4px\">\n      <CalculateIcon />\n    </IconButton>\n  )\n}\n\nexport default ApyButton\n","import React, { useMemo, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled, { keyframes } from 'styled-components'\nimport { Flex, Text, Skeleton } from '@pancakeswap-libs/uikit'\nimport { communityFarms } from 'config/constants'\nimport { Farm } from 'state/types'\nimport { provider as ProviderType } from 'web3-core'\nimport useI18n from 'hooks/useI18n'\nimport ExpandableSectionButton from 'components/ExpandableSectionButton'\nimport { QuoteToken } from 'config/constants/types'\nimport { BASE_ADD_LIQUIDITY_URL } from 'config'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\nimport DetailsSection from './DetailsSection'\nimport CardHeading from './CardHeading'\nimport CardActionsContainer from './CardActionsContainer'\nimport ApyButton from './ApyButton'\n\nexport interface FarmWithStakedValue extends Farm {\n  apy?: BigNumber\n  liquidity?: BigNumber\n}\n\nconst RainbowLight = keyframes`\n\t0% {\n\t\tbackground-position: 0% 50%;\n\t}\n\t50% {\n\t\tbackground-position: 100% 50%;\n\t}\n\t100% {\n\t\tbackground-position: 0% 50%;\n\t}\n`\n\nconst StyledCardAccent = styled.div`\n  background: linear-gradient(\n    45deg,\n    rgba(255, 0, 0, 1) 0%,\n    rgba(255, 154, 0, 1) 10%,\n    rgba(208, 222, 33, 1) 20%,\n    rgba(79, 220, 74, 1) 30%,\n    rgba(63, 218, 216, 1) 40%,\n    rgba(47, 201, 226, 1) 50%,\n    rgba(28, 127, 238, 1) 60%,\n    rgba(95, 21, 242, 1) 70%,\n    rgba(186, 12, 248, 1) 80%,\n    rgba(251, 7, 217, 1) 90%,\n    rgba(255, 0, 0, 1) 100%\n  );\n  background-size: 300% 300%;\n  animation: ${RainbowLight} 2s linear infinite;\n  border-radius: 32px;\n  filter: blur(6px);\n  position: absolute;\n  top: -2px;\n  right: -2px;\n  bottom: -2px;\n  left: -2px;\n  z-index: -1;\n`\n\nconst FCard = styled.div`\n  align-self: baseline;\n  background: ${(props) => props.theme.card.background};\n  border-radius: 32px;\n  box-shadow: 0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05);\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  padding: 24px;\n  position: relative;\n  text-align: center;\n`\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.borderColor};\n  height: 1px;\n  margin: 28px auto;\n  width: 100%;\n`\n\nconst ExpandingWrapper = styled.div<{ expanded: boolean }>`\n  height: ${(props) => (props.expanded ? '100%' : '0px')};\n  overflow: hidden;\n`\n\ninterface FarmCardProps {\n  farm: FarmWithStakedValue\n  removed: boolean\n  cakePrice?: BigNumber\n  bnbPrice?: BigNumber\n  ethPrice?: BigNumber\n  provider?: ProviderType\n  account?: string\n}\n\nconst FarmCard: React.FC<FarmCardProps> = ({ farm, removed, cakePrice, bnbPrice, ethPrice, account }) => {\n  const TranslateString = useI18n()\n\n  const [showExpandableSection, setShowExpandableSection] = useState(false)\n\n  const isCommunityFarm = communityFarms.includes(farm.tokenSymbol)\n  // We assume the token name is coin pair + lp e.g. CAKE-BNB LP, LINK-BNB LP,\n  // NAR-CAKE LP. The images should be cake-bnb.svg, link-bnb.svg, nar-cake.svg\n  const farmImage = farm.lpSymbol.split(' ')[0].toLocaleLowerCase()\n\n  const totalValue: BigNumber = useMemo(() => {\n    if (!farm.lpTotalInQuoteToken) {\n      return null\n    }\n    if (farm.quoteTokenSymbol === QuoteToken.BNB) {\n      return bnbPrice.times(farm.lpTotalInQuoteToken)\n    }\n    if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\n      return cakePrice.times(farm.lpTotalInQuoteToken)\n    }\n    if (farm.quoteTokenSymbol === QuoteToken.ETH) {\n      return ethPrice.times(farm.lpTotalInQuoteToken)\n    }\n    return farm.lpTotalInQuoteToken\n  }, [bnbPrice, cakePrice, ethPrice, farm.lpTotalInQuoteToken, farm.quoteTokenSymbol])\n\n  const totalValueFormated = totalValue\n    ? `$${Number(totalValue).toLocaleString(undefined, { maximumFractionDigits: 0 })}`\n    : '-'\n\n  const lpLabel = farm.lpSymbol && farm.lpSymbol.toUpperCase().replace('PANCAKE', '')\n  const earnLabel = farm.dual ? farm.dual.earnLabel : 'CAKE'\n  const farmAPY = farm.apy && farm.apy.times(new BigNumber(100)).toNumber().toLocaleString('en-US').slice(0, -1)\n\n  const { quoteTokenAdresses, quoteTokenSymbol, tokenAddresses } = farm\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({ quoteTokenAdresses, quoteTokenSymbol, tokenAddresses })\n  const addLiquidityUrl = `${BASE_ADD_LIQUIDITY_URL}/${liquidityUrlPathParts}`\n\n  return (\n    <FCard>\n      {farm.tokenSymbol === 'CAKE' && <StyledCardAccent />}\n      <CardHeading\n        lpLabel={lpLabel}\n        multiplier={farm.multiplier}\n        isCommunityFarm={isCommunityFarm}\n        farmImage={farmImage}\n        tokenSymbol={farm.tokenSymbol}\n      />\n      {!removed && (\n        <Flex justifyContent=\"space-between\" alignItems=\"center\">\n          <Text>{TranslateString(736, 'APR')}:</Text>\n          <Text bold style={{ display: 'flex', alignItems: 'center' }}>\n            {farm.apy ? (\n              <>\n                <ApyButton lpLabel={lpLabel} addLiquidityUrl={addLiquidityUrl} cakePrice={cakePrice} apy={farm.apy} />\n                {farmAPY}%\n              </>\n            ) : (\n              <Skeleton height={24} width={80} />\n            )}\n          </Text>\n        </Flex>\n      )}\n      <Flex justifyContent=\"space-between\">\n        <Text>{TranslateString(318, 'Earn')}:</Text>\n        <Text bold>{earnLabel}</Text>\n      </Flex>\n      <CardActionsContainer farm={farm} account={account} addLiquidityUrl={addLiquidityUrl} />\n      <Divider />\n      <ExpandableSectionButton\n        onClick={() => setShowExpandableSection(!showExpandableSection)}\n        expanded={showExpandableSection}\n      />\n      <ExpandingWrapper expanded={showExpandableSection}>\n        <DetailsSection\n          removed={removed}\n          bscScanAddress={`https://bscscan.com/address/${farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]}`}\n          totalValueFormated={totalValueFormated}\n          lpLabel={lpLabel}\n          addLiquidityUrl={addLiquidityUrl}\n        />\n      </ExpandingWrapper>\n    </FCard>\n  )\n}\n\nexport default FarmCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport ApyButton from 'views/Farms/components/FarmCard/ApyButton'\nimport { Address, QuoteToken } from 'config/constants/types'\nimport BigNumber from 'bignumber.js'\nimport { BASE_ADD_LIQUIDITY_URL } from 'config'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\nimport useI18n from 'hooks/useI18n'\n\nexport interface AprProps {\n  value: number\n  multiplier: string\n  lpLabel: string\n  quoteTokenAdresses: Address\n  quoteTokenSymbol: QuoteToken\n  tokenAddresses: Address\n  cakePrice: BigNumber\n  originalValue: BigNumber\n  hideButton?: boolean\n}\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n\n  button {\n    width: 20px;\n    height: 20px;\n\n    svg {\n      path {\n        fill: ${({ theme }) => theme.colors.textSubtle};\n      }\n    }\n  }\n`\n\nconst AprWrapper = styled.div`\n  min-width: 60px;\n  text-align: left;\n`\n\nconst Apr: React.FC<AprProps> = ({\n  value,\n  lpLabel,\n  quoteTokenAdresses,\n  quoteTokenSymbol,\n  tokenAddresses,\n  cakePrice,\n  originalValue,\n  hideButton = false,\n}) => {\n  const TranslateString = useI18n()\n  const displayApr = value ? `${value}%` : TranslateString(656, 'Loading...')\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({ quoteTokenAdresses, quoteTokenSymbol, tokenAddresses })\n  const addLiquidityUrl = `${BASE_ADD_LIQUIDITY_URL}/${liquidityUrlPathParts}`\n  return (\n    <Container>\n      <AprWrapper>{displayApr}</AprWrapper>\n      {!hideButton && (\n        <ApyButton lpLabel={lpLabel} cakePrice={cakePrice} apy={originalValue} addLiquidityUrl={addLiquidityUrl} />\n      )}\n    </Container>\n  )\n}\n\nexport default Apr\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useFarmUser } from 'state/hooks'\nimport useI18n from 'hooks/useI18n'\nimport { Text } from '@pancakeswap-libs/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\n\nexport interface FarmProps {\n  label: string\n  pid: number\n  image: string\n}\n\nconst Label = styled.span`\n  color: ${({ theme }) => theme.colors.text};\n  font-weight: 600;\n`\n\nconst IconImage = styled.img`\n  margin-right: 8px;\n  min-width: 24px;\n  height: 24px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 40px;\n    height: 40px;\n  }\n`\n\nconst Container = styled.div`\n  padding-left: 16px;\n  display: flex;\n  align-items: center;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-left: 32px;\n  }\n`\n\nconst Farm: React.FunctionComponent<FarmProps> = ({ image, label, pid }) => {\n  const { stakedBalance } = useFarmUser(pid)\n  const TranslateString = useI18n()\n  const rawStakedBalance = getBalanceNumber(stakedBalance)\n\n  const handleRenderFarming = (): JSX.Element => {\n    if (rawStakedBalance) {\n      return (\n        <Text color=\"secondary\" fontSize=\"12px\" bold>\n          {TranslateString(999, 'FARMING')}\n        </Text>\n      )\n    }\n\n    return null\n  }\n\n  return (\n    <Container>\n      <IconImage src={`/images/farms/${image}.svg`} alt=\"icon\" />\n      <div>\n        {handleRenderFarming()}\n        <Label>{label}</Label>\n      </div>\n    </Container>\n  )\n}\n\nexport default Farm\n","import React from 'react'\nimport styled from 'styled-components'\n\nexport interface EarnedProps {\n  earnings: number\n  pid: number\n}\n\nconst Amount = styled.span<{ earned: number }>`\n  color: ${({ earned, theme }) => (earned ? theme.colors.text : theme.colors.textDisabled)};\n  display: flex;\n  align-items: center;\n`\n\nconst Earned: React.FunctionComponent<EarnedProps> = ({ earnings }) => {\n  const displayBalance = earnings !== null ? earnings.toLocaleString() : '?'\n\n  return <Amount earned={earnings}>{displayBalance}</Amount>\n}\n\nexport default Earned\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ChevronDownIcon, useMatchBreakpoints } from '@pancakeswap-libs/uikit'\n\ninterface DetailsProps {\n  actionPanelToggled: boolean\n}\n\nconst Container = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: flex-end;\n  padding-right: 8px;\n  color: ${({ theme }) => theme.colors.primary};\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-right: 0px;\n  }\n`\n\nconst ArrowIcon = styled(ChevronDownIcon)<{ toggled: boolean }>`\n  transform: ${({ toggled }) => (toggled ? 'rotate(180deg)' : 'rotate(0)')};\n  height: 20px;\n`\n\nconst Details: React.FC<DetailsProps> = ({ actionPanelToggled }) => {\n  const { isXl } = useMatchBreakpoints()\n  const isMobile = !isXl\n\n  return (\n    <Container>\n      {!isMobile && 'Details'}\n      <ArrowIcon color=\"primary\" toggled={actionPanelToggled} />\n    </Container>\n  )\n}\n\nexport default Details\n","import React from 'react'\nimport styled from 'styled-components'\n\nexport interface TooltipProps {\n  content: React.ReactNode\n}\n\nconst TooltipContent = styled.div`\n  background: ${({ theme }) => theme.tooltip.background};\n  padding: 16px;\n  border-radius: 16px;\n  color: ${({ theme }) => theme.tooltip.text};\n  width: max-content;\n  display: none;\n  padding: 16px;\n  max-height: 500px;\n  z-index: ${({ theme }) => theme.zIndices.modal};\n  position: absolute;\n  bottom: calc(100% + 16px);\n  transform: translate(34px, 0);\n  right: 0;\n  max-width: 246px;\n\n  &:after {\n    content: '';\n    display: block;\n    width: 0;\n    height: 0;\n    border-left: 10px solid transparent;\n    border-right: 10px solid transparent;\n    border-top: 10px solid ${({ theme }) => theme.tooltip.background};\n    bottom: 0;\n    position: absolute;\n    transform: translate(-34px, 9px);\n    right: 0;\n  }\n`\n\nconst Container = styled.div`\n  position: relative;\n\n  &:hover ${TooltipContent}, &:focus-within ${TooltipContent} {\n    display: block;\n  }\n`\n\nconst Tooltip: React.FunctionComponent<TooltipProps> = ({ content, children }) => {\n  return (\n    <Container>\n      {children}\n      <TooltipContent>{content}</TooltipContent>\n    </Container>\n  )\n}\n\nexport default Tooltip\n","import React from 'react'\nimport styled from 'styled-components'\nimport { HelpIcon } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\n\nimport Tooltip from '../Tooltip/Tooltip'\n\nexport interface MultiplierProps {\n  multiplier: string\n}\n\nconst MultiplierWrapper = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  width: 36px;\n  text-align: right;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    text-align: left;\n  }\n`\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n\n  svg {\n    margin-left: 14px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    svg {\n      margin-left: 0;\n    }\n  }\n`\n\nconst Multiplier: React.FunctionComponent<MultiplierProps> = ({ multiplier }) => {\n  const displayMultipler = multiplier ? multiplier.toLowerCase() : '-'\n  const TranslateString = useI18n()\n\n  return (\n    <Container>\n      <MultiplierWrapper>{displayMultipler}</MultiplierWrapper>\n      <Tooltip\n        content={\n          <div>\n            {TranslateString(999, 'The multiplier represents the amount of CAKE rewards each farm gets.')}\n            <br />\n            <br />\n            {TranslateString(\n              999,\n              'For example, if a 1x farm was getting 1 CAKE per block, a 40x farm would be getting 40 CAKE per block.',\n            )}\n          </div>\n        }\n      >\n        <HelpIcon color=\"textSubtle\" />\n      </Tooltip>\n    </Container>\n  )\n}\n\nexport default Multiplier\n","import React from 'react'\nimport styled from 'styled-components'\nimport { HelpIcon, Text } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\n\nimport Tooltip from '../Tooltip/Tooltip'\n\nexport interface LiquidityProps {\n  liquidity: number\n}\n\nconst LiquidityWrapper = styled.div`\n  min-width: 110px;\n  font-weight: 600;\n  text-align: right;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    text-align: left;\n  }\n`\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n\n  svg {\n    margin-left: 14px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    svg {\n      margin-left: 0;\n    }\n  }\n`\n\nconst Liquidity: React.FunctionComponent<LiquidityProps> = ({ liquidity }) => {\n  const displayLiquidity = liquidity\n    ? `$${Number(liquidity).toLocaleString(undefined, { maximumFractionDigits: 0 })}`\n    : '-'\n  const TranslateString = useI18n()\n\n  return (\n    <Container>\n      <LiquidityWrapper>\n        <Text>{displayLiquidity}</Text>\n      </LiquidityWrapper>\n      <Tooltip content={TranslateString(999, 'The total value of the funds in this farm’s liquidity pool')}>\n        <HelpIcon color=\"textSubtle\" />\n      </Tooltip>\n    </Container>\n  )\n}\n\nexport default Liquidity\n","import styled from 'styled-components'\n\nexport const ActionContainer = styled.div`\n  padding: 16px;\n  border: 2px solid ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  flex-grow: 1;\n  flex-basis: 0;\n  margin-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 12px;\n    margin-right: 12px;\n    margin-bottom: 0;\n    max-height: 100px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    margin-left: 48px;\n    margin-right: 0;\n    margin-bottom: 0;\n    max-height: 100px;\n  }\n`\n\nexport const ActionTitles = styled.div`\n  font-weight: 600;\n  font-size: 12px;\n  margin-bottom: 8px;\n`\n\nexport const Title = styled.span`\n  color: ${({ theme }) => theme.colors.secondary};\n`\n\nexport const Subtle = styled.span`\n  color: ${({ theme }) => theme.colors.textSubtle};\n`\n\nexport const ActionContent = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\nexport const Earned = styled.div`\n  font-weight: 600;\n  font-size: 20px;\n  color: ${({ theme }) => theme.colors.text};\n`\n\nexport const Staked = styled.div`\n  font-size: 12px;\n  color: ${({ theme }) => theme.colors.textSubtle};\n`\n","import React, { useState, useRef, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { Button } from '@pancakeswap-libs/uikit'\nimport BigNumber from 'bignumber.js'\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useHarvest } from 'hooks/useHarvest'\nimport useI18n from 'hooks/useI18n'\nimport { usePriceCakeBusd } from 'state/hooks'\nimport { useCountUp } from 'react-countup'\n\nimport { ActionContainer, ActionTitles, Title, Subtle, ActionContent, Earned, Staked } from './styles'\n\nconst HarvestAction: React.FunctionComponent<FarmWithStakedValue> = ({ pid, userData }) => {\n  const earningsBigNumber = userData ? new BigNumber(userData.earnings) : null\n  const cakePrice = usePriceCakeBusd()\n  let earnings = null\n  let earningsBusd = 0\n  let displayBalance = '?'\n\n  if (earningsBigNumber) {\n    earnings = getBalanceNumber(earningsBigNumber)\n    earningsBusd = new BigNumber(earnings).multipliedBy(cakePrice).toNumber()\n    displayBalance = earnings.toLocaleString()\n  }\n\n  const [pendingTx, setPendingTx] = useState(false)\n  const { account } = useWeb3React()\n  const { onReward } = useHarvest(pid)\n  const TranslateString = useI18n()\n\n  const { countUp, update } = useCountUp({\n    start: 0,\n    end: earningsBusd,\n    duration: 1,\n    separator: ',',\n    decimals: 3,\n  })\n  const updateValue = useRef(update)\n\n  useEffect(() => {\n    updateValue.current(earningsBusd)\n  }, [earningsBusd, updateValue])\n\n  return (\n    <ActionContainer>\n      <ActionTitles>\n        <Title>CAKE </Title>\n        <Subtle>EARNED</Subtle>\n      </ActionTitles>\n      <ActionContent>\n        <div>\n          <Earned>{displayBalance}</Earned>\n          <Staked>~{countUp}USD</Staked>\n        </div>\n        <Button\n          disabled={!earnings || pendingTx || !account}\n          onClick={async () => {\n            setPendingTx(true)\n            await onReward()\n            setPendingTx(false)\n          }}\n          ml=\"4px\"\n        >\n          {TranslateString(999, 'Harvest')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default HarvestAction\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Button, useModal, IconButton, AddIcon, MinusIcon } from '@pancakeswap-libs/uikit'\nimport UnlockButton from 'components/UnlockButton'\nimport { useWeb3React } from '@web3-react/core'\nimport { useFarmUser } from 'state/hooks'\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\nimport useI18n from 'hooks/useI18n'\nimport { useApprove } from 'hooks/useApprove'\nimport { getBep20Contract } from 'utils/contractHelpers'\nimport { BASE_ADD_LIQUIDITY_URL } from 'config'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useStake from 'hooks/useStake'\nimport useUnstake from 'hooks/useUnstake'\nimport useWeb3 from 'hooks/useWeb3'\n\nimport DepositModal from '../../DepositModal'\nimport WithdrawModal from '../../WithdrawModal'\nimport { ActionContainer, ActionTitles, ActionContent, Earned, Title, Subtle } from './styles'\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n`\n\nconst Staked: React.FunctionComponent<FarmWithStakedValue> = ({\n  pid,\n  lpSymbol,\n  lpAddresses,\n  quoteTokenAdresses,\n  quoteTokenSymbol,\n  tokenAddresses,\n}) => {\n  const TranslateString = useI18n()\n  const { account } = useWeb3React()\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { allowance, tokenBalance, stakedBalance } = useFarmUser(pid)\n  const { onStake } = useStake(pid)\n  const { onUnstake } = useUnstake(pid)\n  const web3 = useWeb3()\n\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\n\n  const lpAddress = lpAddresses[process.env.REACT_APP_CHAIN_ID]\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({ quoteTokenAdresses, quoteTokenSymbol, tokenAddresses })\n  const addLiquidityUrl = `${BASE_ADD_LIQUIDITY_URL}/${liquidityUrlPathParts}`\n  const rawStakedBalance = getBalanceNumber(stakedBalance)\n  const displayBalance = rawStakedBalance.toLocaleString()\n\n  const [onPresentDeposit] = useModal(\n    <DepositModal max={tokenBalance} onConfirm={onStake} tokenName={lpSymbol} addLiquidityUrl={addLiquidityUrl} />,\n  )\n  const [onPresentWithdraw] = useModal(<WithdrawModal max={stakedBalance} onConfirm={onUnstake} tokenName={lpSymbol} />)\n\n  const lpContract = getBep20Contract(lpAddress, web3)\n\n  const { onApprove } = useApprove(lpContract)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      await onApprove()\n      setRequestedApproval(false)\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove])\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Subtle>{TranslateString(999, 'START FARMING')}</Subtle>\n        </ActionTitles>\n        <ActionContent>\n          <UnlockButton width=\"100%\" />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (isApproved) {\n    if (rawStakedBalance) {\n      return (\n        <ActionContainer>\n          <ActionTitles>\n            <Title>{lpSymbol} </Title>\n            <Subtle>{TranslateString(999, 'STAKED')}</Subtle>\n          </ActionTitles>\n          <ActionContent>\n            <div>\n              <Earned>{displayBalance}</Earned>\n            </div>\n            <IconButtonWrapper>\n              <IconButton variant=\"secondary\" onClick={onPresentWithdraw} mr=\"6px\">\n                <MinusIcon color=\"primary\" />\n              </IconButton>\n              <IconButton variant=\"secondary\" onClick={onPresentDeposit}>\n                <AddIcon color=\"primary\" />\n              </IconButton>\n            </IconButtonWrapper>\n          </ActionContent>\n        </ActionContainer>\n      )\n    }\n\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Subtle>{TranslateString(999, 'STAKE')} </Subtle>\n          <Title>{lpSymbol}</Title>\n        </ActionTitles>\n        <ActionContent>\n          <Button width=\"100%\" onClick={onPresentDeposit} variant=\"secondary\">\n            {TranslateString(999, 'Stake LP')}\n          </Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>\n        <Subtle>{TranslateString(999, 'ENABLE FARM')}</Subtle>\n      </ActionTitles>\n      <ActionContent>\n        <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove} variant=\"secondary\">\n          {TranslateString(999, 'Enable')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default Staked\n","import React from 'react'\nimport styled from 'styled-components'\nimport useI18n from 'hooks/useI18n'\nimport { LinkExternal, Text, Link } from '@pancakeswap-libs/uikit'\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\nimport { communityFarms } from 'config/constants'\nimport { CommunityTag, CoreTag, DualTag } from 'components/Tags'\n\nimport HarvestAction from './HarvestAction'\nimport StakedAction from './StakedAction'\nimport Apr, { AprProps } from '../Apr'\nimport Multiplier, { MultiplierProps } from '../Multiplier'\nimport Liquidity, { LiquidityProps } from '../Liquidity'\n\nexport interface ActionPanelProps {\n  apr: AprProps\n  multiplier: MultiplierProps\n  liquidity: LiquidityProps\n  details: FarmWithStakedValue\n}\n\nconst Container = styled.div`\n  background: ${({ theme }) => theme.colors.background};\n  display: flex;\n  width: 100%;\n  flex-direction: column-reverse;\n  padding: 24px;\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    flex-direction: row;\n    padding: 16px 32px;\n  }\n`\n\nconst StyledLinkExternal = styled(LinkExternal)`\n  font-weight: 400;\n  margin-left: 8px;\n`\n\nconst StyledLink = styled(Link)`\n  font-weight: 400;\n  margin-top: 8px;\n`\n\nconst StakeContainer = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  align-items: center;\n  display: flex;\n  justify-content: space-between;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    justify-content: flex-start;\n  }\n`\n\nconst TagsContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 25px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-top: 16px;\n  }\n\n  > div {\n    height: 24px;\n    padding: 0 6px;\n    font-size: 14px;\n    margin-right: 4px;\n\n    svg {\n      width: 14px;\n    }\n  }\n`\n\nconst ActionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    align-items: center;\n    flex-grow: 1;\n    flex-basis: 0;\n  }\n`\n\nconst InfoContainer = styled.div`\n  min-width: 200px;\n`\n\nconst ValueContainer = styled.div`\n  display: block;\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    display: none;\n  }\n`\n\nconst ValueWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin: 4px 0px;\n`\n\nconst ActionPanel: React.FunctionComponent<ActionPanelProps> = ({ details, apr, multiplier, liquidity }) => {\n  const farm = details\n\n  const TranslateString = useI18n()\n  const { quoteTokenAdresses, quoteTokenSymbol, tokenAddresses, tokenSymbol, dual } = farm\n  const lpLabel = farm.lpSymbol && farm.lpSymbol.toUpperCase().replace('PANCAKE', '')\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({ quoteTokenAdresses, quoteTokenSymbol, tokenAddresses })\n  const lpAddress = farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]\n  const bsc = `https://bscscan.com/address/${lpAddress}`\n  const info = `https://pancakeswap.info/pair/${lpAddress}`\n  const isCommunityFarm = communityFarms.includes(tokenSymbol)\n\n  return (\n    <Container>\n      <InfoContainer>\n        <StakeContainer>\n          Stake:\n          <StyledLinkExternal href={`https://exchange.pancakeswap.finance/#/add/${liquidityUrlPathParts}`}>\n            {lpLabel}\n          </StyledLinkExternal>\n        </StakeContainer>\n        <StyledLink href={bsc} external>\n          {TranslateString(999, 'BscScan')}\n        </StyledLink>\n        <StyledLink href={info} external>\n          {TranslateString(999, 'Info site')}\n        </StyledLink>\n        <TagsContainer>\n          {isCommunityFarm ? <CommunityTag /> : <CoreTag />}\n          {dual ? <DualTag /> : null}\n        </TagsContainer>\n      </InfoContainer>\n      <ValueContainer>\n        <ValueWrapper>\n          <Text>APR</Text>\n          <Apr {...apr} />\n        </ValueWrapper>\n        <ValueWrapper>\n          <Text>{TranslateString(999, 'Multiplier')}</Text>\n          <Multiplier {...multiplier} />\n        </ValueWrapper>\n        <ValueWrapper>\n          <Text>{TranslateString(999, 'Liquidity')}</Text>\n          <Liquidity {...liquidity} />\n        </ValueWrapper>\n      </ValueContainer>\n      <ActionContainer>\n        <HarvestAction {...farm} />\n        <StakedAction {...farm} />\n      </ActionContainer>\n    </Container>\n  )\n}\n\nexport default ActionPanel\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Label = styled.div`\n  font-size: 12px;\n  color: ${({ theme }) => theme.colors.textSubtle};\n  text-align: left;\n  text-transform: uppercase;\n`\n\nconst ContentContainer = styled.div`\n  min-height: 24px;\n  display: flex;\n  align-items: center;\n`\n\ninterface CellLayoutProps {\n  label?: string\n}\n\nconst CellLayout: React.FC<CellLayoutProps> = ({ label = '', children }) => {\n  return (\n    <div>\n      {label && <Label>{label}</Label>}\n      <ContentContainer>{children}</ContentContainer>\n    </div>\n  )\n}\n\nexport default CellLayout\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\nimport { useMatchBreakpoints } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\n\nimport Apr, { AprProps } from './Apr'\nimport Farm, { FarmProps } from './Farm'\nimport Earned, { EarnedProps } from './Earned'\nimport Details from './Details'\nimport Multiplier, { MultiplierProps } from './Multiplier'\nimport Liquidity, { LiquidityProps } from './Liquidity'\nimport ActionPanel from './Actions/ActionPanel'\nimport CellLayout from './CellLayout'\nimport { DesktopColumnSchema, MobileColumnSchema } from '../types'\n\nexport interface RowProps {\n  apr: AprProps\n  farm: FarmProps\n  earned: EarnedProps\n  multiplier: MultiplierProps\n  liquidity: LiquidityProps\n  details: FarmWithStakedValue\n}\n\nconst cells = {\n  apr: Apr,\n  farm: Farm,\n  earned: Earned,\n  details: Details,\n  multiplier: Multiplier,\n  liquidity: Liquidity,\n}\n\nconst CellInner = styled.div`\n  padding: 24px 0px;\n  display: flex;\n  width: 100%;\n  align-items: center;\n  padding-right: 8px;\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    padding-right: 32px;\n  }\n`\n\nconst StyledTr = styled.tr`\n  cursor: pointer;\n  border-bottom: 2px solid ${({ theme }) => theme.colors.borderColor};\n`\n\nconst EarnedMobileCell = styled.td`\n  padding: 16px 0 24px 16px;\n`\n\nconst AprMobileCell = styled.td`\n  padding-top: 16px;\n  padding-bottom: 24px;\n`\n\nconst FarmMobileCell = styled.td`\n  padding-top: 24px;\n`\n\nconst Row: React.FunctionComponent<RowProps> = (props) => {\n  const { details } = props\n  const [actionPanelToggled, setActionPanelToggled] = useState(false)\n  const TranslateString = useI18n()\n\n  const toggleActionPanel = () => {\n    setActionPanelToggled(!actionPanelToggled)\n  }\n\n  const cellLabel = (key: string): string => {\n    if (key === 'farm' || key === 'details') {\n      return ''\n    }\n\n    return key\n  }\n\n  const { isXl, isXs } = useMatchBreakpoints()\n\n  const isMobile = !isXl\n  const tableSchema = isMobile ? MobileColumnSchema : DesktopColumnSchema\n  const columnNames = tableSchema.map((column) => column.name)\n\n  const handleRenderRow = () => {\n    if (!isXs) {\n      return (\n        <StyledTr onClick={toggleActionPanel}>\n          {Object.keys(props).map((key) => {\n            if (columnNames.indexOf(key) === -1) {\n              return null\n            }\n\n            switch (key) {\n              case 'details':\n                return (\n                  <td key={key}>\n                    <CellInner>\n                      <CellLayout>\n                        <Details actionPanelToggled={actionPanelToggled} />\n                      </CellLayout>\n                    </CellInner>\n                  </td>\n                )\n              case 'apr':\n                return (\n                  <td key={key}>\n                    <CellInner>\n                      <CellLayout label={TranslateString(999, 'Apr')}>\n                        <Apr {...props.apr} hideButton={isMobile} />\n                      </CellLayout>\n                    </CellInner>\n                  </td>\n                )\n              default:\n                return (\n                  <td key={key}>\n                    <CellInner>\n                      <CellLayout label={cellLabel(key)}>{React.createElement(cells[key], props[key])}</CellLayout>\n                    </CellInner>\n                  </td>\n                )\n            }\n          })}\n        </StyledTr>\n      )\n    }\n\n    return (\n      <StyledTr onClick={toggleActionPanel}>\n        <td>\n          <tr>\n            <FarmMobileCell>\n              <CellLayout>\n                <Farm {...props.farm} />\n              </CellLayout>\n            </FarmMobileCell>\n          </tr>\n          <tr>\n            <EarnedMobileCell>\n              <CellLayout label={TranslateString(999, 'Earned')}>\n                <Earned {...props.earned} />\n              </CellLayout>\n            </EarnedMobileCell>\n            <AprMobileCell>\n              <CellLayout label={TranslateString(999, 'Apr')}>\n                <Apr {...props.apr} hideButton />\n              </CellLayout>\n            </AprMobileCell>\n          </tr>\n        </td>\n        <td>\n          <CellInner>\n            <CellLayout>\n              <Details actionPanelToggled={actionPanelToggled} />\n            </CellLayout>\n          </CellInner>\n        </td>\n      </StyledTr>\n    )\n  }\n\n  return (\n    <>\n      {handleRenderRow()}\n      {actionPanelToggled && details && (\n        <tr>\n          <td colSpan={6}>\n            <ActionPanel {...props} />\n          </td>\n        </tr>\n      )}\n    </>\n  )\n}\n\nexport default Row\n","import React, { useRef } from 'react'\nimport styled from 'styled-components'\nimport { useTable, Button, ChevronUpIcon, ColumnType } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\n\nimport Row, { RowProps } from './Row'\n\nexport interface ITableProps {\n  data: RowProps[]\n  columns: ColumnType<RowProps>[]\n  sortColumn?: string\n}\n\nconst Container = styled.div`\n  filter: ${({ theme }) => theme.card.dropShadow};\n  width: 100%;\n  background: ${({ theme }) => theme.card.background};\n  border-radius: 16px;\n  margin: 16px 0px;\n`\n\nconst TableWrapper = styled.div`\n  overflow: visible;\n\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`\n\nconst StyledTable = styled.table`\n  border-collapse: collapse;\n  font-size: 14px;\n  border-radius: 4px;\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n`\n\nconst TableBody = styled.tbody`\n  & tr {\n    td {\n      font-size: 16px;\n      vertical-align: middle;\n    }\n  }\n`\n\nconst TableContainer = styled.div`\n  position: relative;\n}\n`\n\nconst ScrollButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 5px;\n  padding-bottom: 5px;\n`\n\nexport default React.forwardRef((props: ITableProps) => {\n  const tableWrapperEl = useRef<HTMLDivElement>(null)\n  const TranslateString = useI18n()\n  const { data, columns } = props\n\n  const { rows } = useTable(columns, data, { sortable: true, sortColumn: 'farm' })\n\n  const scrollToTop = (): void => {\n    tableWrapperEl.current.scrollIntoView({\n      behavior: 'smooth',\n    })\n  }\n\n  return (\n    <Container>\n      <TableContainer>\n        <TableWrapper ref={tableWrapperEl}>\n          <StyledTable>\n            <TableBody>\n              {rows.map((row) => {\n                return <Row {...row.original} key={`table-row-${row.id}`} />\n              })}\n            </TableBody>\n          </StyledTable>\n        </TableWrapper>\n        <ScrollButtonContainer>\n          <Button variant=\"text\" onClick={scrollToTop}>\n            {TranslateString(999, 'To Top')}\n            <ChevronUpIcon color=\"primary\" />\n          </Button>\n        </ScrollButtonContainer>\n      </TableContainer>\n    </Container>\n  )\n})\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\n\nconst FarmTabButtons = () => {\n  const { url, isExact } = useRouteMatch()\n  const TranslateString = useI18n()\n\n  return (\n    <Wrapper>\n      <ButtonMenu activeIndex={isExact ? 0 : 1} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          {TranslateString(698, 'Active')}\n        </ButtonMenuItem>\n        <ButtonMenuItem as={Link} to={`${url}/history`}>\n          {TranslateString(700, 'Inactive')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n    </Wrapper>\n  )\n}\n\nexport default FarmTabButtons\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  a {\n    padding-left: 12px;\n    padding-right: 12px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 16px;\n  }\n`\n","import React, { useState, useRef } from 'react'\nimport { Input } from '@pancakeswap-libs/uikit'\nimport styled from 'styled-components'\n\nconst StyledInput = styled(Input)`\n  border-radius: 16px;\n  margin-left: auto;\n`\n\nconst InputWrapper = styled.div`\n  position: relative;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: 234px;\n    display: block;\n  }\n`\n\nconst Container = styled.div<{ toggled: boolean }>``\n\ninterface Props {\n  value: string\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\n}\n\nconst SearchInput: React.FC<Props> = ({ value, onChange }) => {\n  const [toggled, setToggled] = useState(false)\n  const inputEl = useRef(null)\n\n  return (\n    <Container toggled={toggled}>\n      <InputWrapper>\n        <StyledInput\n          ref={inputEl}\n          value={value}\n          onChange={onChange}\n          placeholder=\"Search farms\"\n          onBlur={() => setToggled(false)}\n        />\n      </InputWrapper>\n    </Container>\n  )\n}\n\nexport default SearchInput\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ListViewIcon, CardViewIcon, IconButton } from '@pancakeswap-libs/uikit'\nimport { ViewMode } from '../types'\n\ninterface ToogleViewProps {\n  viewMode: ViewMode\n  onToggle: (mode: ViewMode) => void\n}\n\nconst Container = styled.div`\n  margin-left: -8px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 0;\n  }\n`\n\nconst ToggleView: React.FunctionComponent<ToogleViewProps> = ({ viewMode, onToggle }) => {\n  const handleToggle = (mode: ViewMode) => {\n    if (viewMode !== mode) {\n      onToggle(mode)\n    }\n  }\n\n  return (\n    <Container>\n      <IconButton variant=\"text\" scale=\"sm\" onClick={() => handleToggle(ViewMode.CARD)}>\n        <CardViewIcon color={viewMode === ViewMode.CARD ? 'primary' : 'textDisabled'} />\n      </IconButton>\n      <IconButton variant=\"text\" scale=\"sm\" onClick={() => handleToggle(ViewMode.TABLE)}>\n        <ListViewIcon color={viewMode === ViewMode.TABLE ? 'primary' : 'textDisabled'} />\n      </IconButton>\n    </Container>\n  )\n}\n\nexport default ToggleView\n","import React, { useState, useRef, useEffect } from 'react'\nimport styled, { css } from 'styled-components'\nimport { ArrowDropDownIcon, Text } from '@pancakeswap-libs/uikit'\n\nconst DropDownHeader = styled.div`\n  width: 100%;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0px 16px;\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n  border-radius: 16px;\n  background: ${({ theme }) => theme.colors.input};\n  transition: border-radius 0.15s;\n`\n\nconst DropDownListContainer = styled.div`\n  min-width: 136px;\n  height: 0;\n  position: absolute;\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.input};\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n  transition: transform 0.15s, opacity 0.15s;\n  transform: scaleY(0);\n  transform-origin: top;\n  opacity: 0;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n`\n\nconst DropDownContainer = styled.div<{ isOpen: boolean; width: number; height: number }>`\n  cursor: pointer;\n  width: ${({ width }) => width}px;\n  position: relative;\n  background: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  height: 40px;\n  min-width: 136px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n\n  ${(props) =>\n    props.isOpen &&\n    css`\n      ${DropDownHeader} {\n        border-bottom: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n        border-radius: 16px 16px 0 0;\n      }\n\n      ${DropDownListContainer} {\n        height: auto;\n        transform: scaleY(1);\n        opacity: 1;\n        border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        border-top-width: 0;\n        border-radius: 0 0 16px 16px;\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n      }\n    `}\n\n  svg {\n    position: absolute;\n    right: 16px;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n`\n\nconst DropDownList = styled.ul`\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n`\n\nconst ListItem = styled.li`\n  list-style: none;\n  padding: 8px 16px;\n  &:hover {\n    background: ${({ theme }) => theme.colors.inputSecondary};\n  }\n`\n\nexport interface SelectProps {\n  options: OptionProps[]\n  onChange?: (option: OptionProps) => void\n}\n\nexport interface OptionProps {\n  label: string\n  value: any\n}\n\nconst Select: React.FunctionComponent<SelectProps> = ({ options, onChange }) => {\n  const containerRef = useRef(null)\n  const dropdownRef = useRef(null)\n  const [isOpen, setIsOpen] = useState(false)\n  const [selectedOption, setSelectedOption] = useState(options[0])\n  const [containerSize, setContainerSize] = useState({ width: 0, height: 0 })\n\n  const toggling = () => setIsOpen(!isOpen)\n\n  const onOptionClicked = (option: OptionProps) => () => {\n    setSelectedOption(option)\n    setIsOpen(false)\n\n    if (onChange) {\n      onChange(option)\n    }\n  }\n\n  useEffect(() => {\n    setContainerSize({\n      width: dropdownRef.current.offsetWidth, // Consider border\n      height: dropdownRef.current.offsetHeight,\n    })\n  }, [])\n\n  return (\n    <DropDownContainer isOpen={isOpen} ref={containerRef} {...containerSize}>\n      {containerSize.width !== 0 && (\n        <DropDownHeader onClick={toggling}>\n          <Text>{selectedOption.label}</Text>\n        </DropDownHeader>\n      )}\n      <ArrowDropDownIcon color=\"text\" onClick={toggling} />\n      <DropDownListContainer>\n        <DropDownList ref={dropdownRef}>\n          {options.map((option) =>\n            option.label !== selectedOption.label ? (\n              <ListItem onClick={onOptionClicked(option)} key={option.label}>\n                <Text>{option.label}</Text>\n              </ListItem>\n            ) : null,\n          )}\n        </DropDownList>\n      </DropDownListContainer>\n    </DropDownContainer>\n  )\n}\n\nexport default Select\n","import React, { useEffect, useCallback, useState, useRef } from 'react'\nimport { Route, useRouteMatch, useLocation } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { Image, Heading, RowType, Toggle, Text } from '@pancakeswap-libs/uikit'\nimport styled from 'styled-components'\nimport { BLOCKS_PER_YEAR, CAKE_PER_BLOCK, CAKE_POOL_PID } from 'config'\nimport FlexLayout from 'components/layout/Flex'\nimport Page from 'components/layout/Page'\nimport { useFarms, usePriceBnbBusd, usePriceCakeBusd, usePriceEthBusd } from 'state/hooks'\nimport useRefresh from 'hooks/useRefresh'\nimport { fetchFarmUserDataAsync } from 'state/actions'\nimport { QuoteToken } from 'config/constants/types'\nimport useI18n from 'hooks/useI18n'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { orderBy } from 'lodash'\n\nimport FarmCard, { FarmWithStakedValue } from './components/FarmCard/FarmCard'\nimport Table from './components/FarmTable/FarmTable'\nimport FarmTabButtons from './components/FarmTabButtons'\nimport SearchInput from './components/SearchInput'\nimport { RowProps } from './components/FarmTable/Row'\nimport ToggleView from './components/ToggleView/ToggleView'\nimport { DesktopColumnSchema, ViewMode } from './components/types'\nimport Select, { OptionProps } from './components/Select/Select'\n\nconst ControlContainer = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  position: relative;\n\n  justify-content: space-between;\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    flex-wrap: wrap;\n    padding: 16px 32px;\n  }\n`\n\nconst ToggleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 10px;\n\n  ${Text} {\n    margin-left: 8px;\n  }\n`\n\nconst LabelWrapper = styled.div`\n  > ${Text} {\n    font-size: 12px;\n  }\n`\n\nconst FilterContainer = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: 8px 0px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n    padding: 0;\n  }\n`\n\nconst ViewControls = styled.div`\n  flex-wrap: wrap;\n  justify-content: space-between;\n  display: flex;\n  align-items: center;\n  width: 100%;\n\n  > div {\n    padding: 8px 0px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    justify-content: flex-start;\n    width: auto;\n\n    > div {\n      padding: 0;\n    }\n  }\n`\n\nconst StyledImage = styled(Image)`\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 58px;\n`\n\nconst Header = styled.div`\n  padding: 32px 0px;\n  background: ${({ theme }) => theme.colors.gradients.bubblegum};\n\n  padding-left: 16px;\n  padding-right: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-left: 24px;\n    padding-right: 24px;\n  }\n`\n\nconst Farms: React.FC = () => {\n  const { path } = useRouteMatch()\n  const { pathname } = useLocation()\n  const TranslateString = useI18n()\n  const farmsLP = useFarms()\n  const cakePrice = usePriceCakeBusd()\n  const bnbPrice = usePriceBnbBusd()\n  const [query, setQuery] = useState('')\n  const [viewMode, setViewMode] = useState(ViewMode.TABLE)\n  const ethPriceUsd = usePriceEthBusd()\n  const { account } = useWeb3React()\n  const [sortOption, setSortOption] = useState('hot')\n\n  const dispatch = useDispatch()\n  const { fastRefresh } = useRefresh()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchFarmUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const [stackedOnly, setStackedOnly] = useState(false)\n\n  const activeFarms = farmsLP.filter((farm) => farm.pid !== 0 && farm.multiplier !== '0X')\n  const inactiveFarms = farmsLP.filter((farm) => farm.pid !== 0 && farm.multiplier === '0X')\n\n  const tableRef = useRef(null)\n\n  const stackedOnlyFarms = activeFarms.filter(\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\n  )\n\n  const sortFarms = (farms: FarmWithStakedValue[]): FarmWithStakedValue[] => {\n    switch (sortOption) {\n      case 'apr':\n        return orderBy(farms, 'apy', 'desc')\n      case 'multiplier':\n        return orderBy(farms, (farm: FarmWithStakedValue) => Number(farm.multiplier.slice(0, -1)), 'desc')\n      case 'earned':\n        return orderBy(farms, (farm: FarmWithStakedValue) => (farm.userData ? farm.userData.earnings : 0), 'desc')\n      case 'liquidity':\n        return orderBy(farms, (farm: FarmWithStakedValue) => Number(farm.liquidity), 'desc')\n      default:\n        return farms\n    }\n  }\n\n  // /!\\ This function will be removed soon\n  // This function compute the APY for each farm and will be replaced when we have a reliable API\n  // to retrieve assets prices against USD\n  const farmsList = useCallback(\n    (farmsToDisplay): FarmWithStakedValue[] => {\n      const cakePriceVsBNB = new BigNumber(farmsLP.find((farm) => farm.pid === CAKE_POOL_PID)?.tokenPriceVsQuote || 0)\n      let farmsToDisplayWithAPY: FarmWithStakedValue[] = farmsToDisplay.map((farm) => {\n        if (!farm.tokenAmount || !farm.lpTotalInQuoteToken || !farm.lpTotalInQuoteToken) {\n          return farm\n        }\n        const cakeRewardPerBlock = CAKE_PER_BLOCK.times(farm.poolWeight)\n        const cakeRewardPerYear = cakeRewardPerBlock.times(BLOCKS_PER_YEAR)\n\n        // cakePriceInQuote * cakeRewardPerYear / lpTotalInQuoteToken\n        let apy = cakePriceVsBNB.times(cakeRewardPerYear).div(farm.lpTotalInQuoteToken)\n\n        if (farm.quoteTokenSymbol === QuoteToken.BUSD || farm.quoteTokenSymbol === QuoteToken.UST) {\n          apy = cakePriceVsBNB.times(cakeRewardPerYear).div(farm.lpTotalInQuoteToken).times(bnbPrice)\n        } else if (farm.quoteTokenSymbol === QuoteToken.ETH) {\n          apy = cakePrice.div(ethPriceUsd).times(cakeRewardPerYear).div(farm.lpTotalInQuoteToken)\n        } else if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\n          apy = cakeRewardPerYear.div(farm.lpTotalInQuoteToken)\n        } else if (farm.dual) {\n          const cakeApy =\n            farm && cakePriceVsBNB.times(cakeRewardPerBlock).times(BLOCKS_PER_YEAR).div(farm.lpTotalInQuoteToken)\n          const dualApy =\n            farm.tokenPriceVsQuote &&\n            new BigNumber(farm.tokenPriceVsQuote)\n              .times(farm.dual.rewardPerBlock)\n              .times(BLOCKS_PER_YEAR)\n              .div(farm.lpTotalInQuoteToken)\n\n          apy = cakeApy && dualApy && cakeApy.plus(dualApy)\n        }\n\n        let liquidity = farm.lpTotalInQuoteToken\n\n        if (!farm.lpTotalInQuoteToken) {\n          liquidity = null\n        }\n        if (farm.quoteTokenSymbol === QuoteToken.BNB) {\n          liquidity = bnbPrice.times(farm.lpTotalInQuoteToken)\n        }\n        if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\n          liquidity = cakePrice.times(farm.lpTotalInQuoteToken)\n        }\n\n        return { ...farm, apy, liquidity }\n      })\n\n      if (query) {\n        const lowercaseQuery = query.toLowerCase()\n        farmsToDisplayWithAPY = farmsToDisplayWithAPY.filter((farm: FarmWithStakedValue) => {\n          if (farm.lpSymbol.toLowerCase().includes(lowercaseQuery)) {\n            return true\n          }\n\n          return false\n        })\n      }\n      return farmsToDisplayWithAPY\n    },\n    [bnbPrice, farmsLP, query, cakePrice, ethPriceUsd],\n  )\n\n  const handleChangeQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value)\n  }\n\n  const isActive = !pathname.includes('history')\n  let farmsStaked = []\n  if (isActive) {\n    farmsStaked = stackedOnly ? farmsList(stackedOnlyFarms) : farmsList(activeFarms)\n  } else {\n    farmsStaked = farmsList(inactiveFarms)\n  }\n\n  farmsStaked = sortFarms(farmsStaked)\n\n  const rowData = farmsStaked.map((farm) => {\n    const { quoteTokenAdresses, quoteTokenSymbol, tokenAddresses } = farm\n    const lpLabel = farm.lpSymbol && farm.lpSymbol.toUpperCase().replace('PANCAKE', '')\n\n    const row: RowProps = {\n      apr: {\n        value: farm.apy\n          ? Number(`${farm.apy.times(new BigNumber(100)).toNumber().toLocaleString('en-US').slice(0, -1)}`)\n          : null,\n        multiplier: farm.multiplier,\n        lpLabel,\n        quoteTokenAdresses,\n        quoteTokenSymbol,\n        tokenAddresses,\n        cakePrice,\n        originalValue: farm.apy,\n      },\n      farm: {\n        image: farm.lpSymbol.split(' ')[0].toLocaleLowerCase(),\n        label: lpLabel,\n        pid: farm.pid,\n      },\n      earned: {\n        earnings: farm.userData ? getBalanceNumber(new BigNumber(farm.userData.earnings)) : null,\n        pid: farm.pid,\n      },\n      liquidity: {\n        liquidity: farm.liquidity,\n      },\n      multiplier: {\n        multiplier: farm.multiplier,\n      },\n      details: farm,\n    }\n\n    return row\n  })\n\n  const renderContent = (): JSX.Element => {\n    if (viewMode === ViewMode.TABLE && rowData.length) {\n      const columnSchema = DesktopColumnSchema\n\n      const columns = columnSchema.map((column) => ({\n        id: column.id,\n        name: column.name,\n        label: column.normal,\n        sort: (a: RowType<RowProps>, b: RowType<RowProps>) => {\n          switch (column.name) {\n            case 'farm':\n              return b.id - a.id\n            case 'apr':\n              if (a.original.apr.value && b.original.apr.value) {\n                return Number(a.original.apr.value) - Number(b.original.apr.value)\n              }\n\n              return 0\n            case 'earned':\n              return a.original.earned.earnings - b.original.earned.earnings\n            default:\n              return 1\n          }\n        },\n        sortable: column.sortable,\n      }))\n\n      return <Table data={rowData} ref={tableRef} columns={columns} />\n    }\n\n    return (\n      <div>\n        <FlexLayout>\n          <Route exact path={`${path}`}>\n            {farmsStaked.map((farm) => (\n              <FarmCard\n                key={farm.pid}\n                farm={farm}\n                bnbPrice={bnbPrice}\n                cakePrice={cakePrice}\n                ethPrice={ethPriceUsd}\n                account={account}\n                removed={false}\n              />\n            ))}\n          </Route>\n          <Route exact path={`${path}/history`}>\n            {farmsStaked.map((farm) => (\n              <FarmCard\n                key={farm.pid}\n                farm={farm}\n                bnbPrice={bnbPrice}\n                cakePrice={cakePrice}\n                ethPrice={ethPriceUsd}\n                account={account}\n                removed\n              />\n            ))}\n          </Route>\n        </FlexLayout>\n      </div>\n    )\n  }\n\n  const handleSortOptionChange = (option: OptionProps): void => {\n    setSortOption(option.value)\n  }\n\n  return (\n    <>\n      <Header>\n        <Heading as=\"h1\" size=\"xxl\" color=\"secondary\" mb=\"24px\">\n          {TranslateString(999, 'Farms')}\n        </Heading>\n        <Heading size=\"lg\" color=\"text\">\n          {TranslateString(999, 'Stake Liquidity Pool (LP) tokens to earn.')}\n        </Heading>\n      </Header>\n      <Page>\n        <ControlContainer>\n          <ViewControls>\n            <ToggleView viewMode={viewMode} onToggle={(mode: ViewMode) => setViewMode(mode)} />\n            <ToggleWrapper>\n              <Toggle checked={stackedOnly} onChange={() => setStackedOnly(!stackedOnly)} scale=\"sm\" />\n              <Text> {TranslateString(1116, 'Staked only')}</Text>\n            </ToggleWrapper>\n            <FarmTabButtons />\n          </ViewControls>\n          <FilterContainer>\n            <LabelWrapper>\n              <Text>SORT BY</Text>\n              <Select\n                options={[\n                  {\n                    label: 'Hot',\n                    value: 'hot',\n                  },\n                  {\n                    label: 'APR',\n                    value: 'apr',\n                  },\n                  {\n                    label: 'Multiplier',\n                    value: 'multiplier',\n                  },\n                  {\n                    label: 'Earned',\n                    value: 'earned',\n                  },\n                  {\n                    label: 'Liquidity',\n                    value: 'liquidity',\n                  },\n                ]}\n                onChange={handleSortOptionChange}\n              />\n            </LabelWrapper>\n            <LabelWrapper style={{ marginLeft: 16 }}>\n              <Text>SEARCH</Text>\n              <SearchInput onChange={handleChangeQuery} value={query} />\n            </LabelWrapper>\n          </FilterContainer>\n        </ControlContainer>\n        {renderContent()}\n        <StyledImage src=\"/images/3dpan.png\" alt=\"Pancake illustration\" width={120} height={103} />\n      </Page>\n    </>\n  )\n}\n\nexport default Farms\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ChevronDownIcon, ChevronUpIcon, Text } from '@pancakeswap-libs/uikit'\n\nexport interface ExpandableSectionButtonProps {\n  onClick?: () => void\n  expanded?: boolean\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n\n  svg {\n    fill: ${({ theme }) => theme.colors.primary};\n  }\n`\n\nconst ExpandableSectionButton: React.FC<ExpandableSectionButtonProps> = ({ onClick, expanded }) => {\n  return (\n    <Wrapper aria-label=\"Hide or show expandable content\" role=\"button\" onClick={() => onClick()}>\n      <Text color=\"primary\" bold>\n        {expanded ? 'Hide' : 'Details'}\n      </Text>\n      {expanded ? <ChevronUpIcon /> : <ChevronDownIcon />}\n    </Wrapper>\n  )\n}\n\nExpandableSectionButton.defaultProps = {\n  expanded: false,\n}\n\nexport default ExpandableSectionButton\n"],"sourceRoot":""}